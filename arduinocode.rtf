{\rtf1\ansi\ansicpg1252\cocoartf2821
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;\red96\green126\blue3;\red255\green255\blue255;\red61\green73\blue78;
\red9\green74\blue76;\red199\green63\blue5;\red17\green134\blue139;\red52\green62\blue66;\red131\green148\blue149;
}
{\*\expandedcolortbl;;\cssrgb\c44706\c55686\c0;\cssrgb\c100000\c100000\c100000;\cssrgb\c30588\c35686\c38039;
\cssrgb\c0\c36078\c37255;\cssrgb\c82745\c32941\c0;\cssrgb\c0\c59216\c61569;\cssrgb\c26275\c30980\c32941;\cssrgb\c58431\c64706\c65098;
}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\partightenfactor0

\f0\fs24 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 #include\cf4 \strokec4  \cf5 \strokec5 <BLEDevice.h>\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 #include\cf4 \strokec4  \cf5 \strokec5 <BLEServer.h>\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 #include\cf4 \strokec4  \cf5 \strokec5 <BLEUtils.h>\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 #include\cf4 \strokec4  \cf5 \strokec5 <BLE2902.h>\cf4 \cb1 \strokec4 \
\
\cf2 \cb3 \strokec2 #define\cf4 \strokec4  \cf6 \strokec6 SERVICE_UUID\cf4 \strokec4         \cf5 \strokec5 "4fafc201-1fb5-459e-8fcc-c5c9c331914b"\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 #define\cf4 \strokec4  \cf6 \strokec6 CHARACTERISTIC_UUID\cf4 \strokec4  \cf5 \strokec5 "beb5483e-36e1-4688-b7f5-ea07361b26a8"\cf4 \cb1 \strokec4 \
\
\pard\pardeftab720\partightenfactor0
\cf7 \cb3 \strokec7 const\cf4 \strokec4  \cf7 \strokec7 int\cf4 \strokec4  ledPin = \cf5 \strokec5 2\cf4 \strokec4 ;\cb1 \
\
\cf7 \cb3 \strokec7 class\cf4 \strokec4  MyCallbacks : \cf7 \strokec7 public\cf4 \strokec4  BLECharacteristicCallbacks \cf8 \strokec8 \{\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3   \cf7 \strokec7 void\cf4 \strokec4  \cf6 \strokec6 onWrite\cf8 \strokec8 (\cf4 \strokec4 BLECharacteristic \cf7 \strokec7 *\cf8 \strokec8 pCharacteristic)\cf4 \strokec4  \cf7 \strokec7 override\cf4 \strokec4  \cf8 \strokec8 \{\cf4 \cb1 \strokec4 \
\cb3     String rxValue = \cf6 \strokec6 pCharacteristic\cf4 \strokec4 ->\cf6 \strokec6 getValue\cf8 \strokec8 ()\cf4 \strokec4 ;\cf9 \strokec9   // using Arduino String per our previous fix\cf4 \cb1 \strokec4 \
\cb3     \cf6 \strokec6 Serial\cf4 \strokec4 .\cf6 \strokec6 print\cf8 \strokec8 (\cf5 \strokec5 "Received Value: "\cf8 \strokec8 )\cf4 \strokec4 ;\cb1 \
\cb3     \cf6 \strokec6 Serial\cf4 \strokec4 .\cf6 \strokec6 println\cf8 \strokec8 (\cf4 \strokec4 rxValue\cf8 \strokec8 )\cf4 \strokec4 ;\cb1 \
\
\cb3     \cf2 \strokec2 if\cf4 \strokec4  \cf8 \strokec8 (\cf4 \strokec4 rxValue == \cf5 \strokec5 "blink"\cf8 \strokec8 )\cf4 \strokec4  \cf8 \strokec8 \{\cf4 \cb1 \strokec4 \
\cb3       \cf6 \strokec6 digitalWrite\cf8 \strokec8 (\cf4 \strokec4 ledPin, HIGH\cf8 \strokec8 )\cf4 \strokec4 ;\cb1 \
\cb3       \cf6 \strokec6 delay\cf8 \strokec8 (\cf5 \strokec5 500\cf8 \strokec8 )\cf4 \strokec4 ;\cb1 \
\cb3       \cf6 \strokec6 digitalWrite\cf8 \strokec8 (\cf4 \strokec4 ledPin, LOW\cf8 \strokec8 )\cf4 \strokec4 ;\cb1 \
\cb3       \cf6 \strokec6 delay\cf8 \strokec8 (\cf5 \strokec5 500\cf8 \strokec8 )\cf4 \strokec4 ;\cb1 \
\cb3     \cf8 \strokec8 \}\cf4 \cb1 \strokec4 \
\cb3   \cf8 \strokec8 \}\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf8 \cb3 \strokec8 \}\cf4 \strokec4 ;\cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf7 \cb3 \strokec7 void\cf4 \strokec4  \cf6 \strokec6 setup\cf8 \strokec8 ()\cf4 \strokec4  \cf8 \strokec8 \{\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3   \cf6 \strokec6 Serial\cf4 \strokec4 .\cf6 \strokec6 begin\cf8 \strokec8 (\cf5 \strokec5 115200\cf8 \strokec8 )\cf4 \strokec4 ;\cb1 \
\cb3   \cf6 \strokec6 pinMode\cf8 \strokec8 (\cf4 \strokec4 ledPin, OUTPUT\cf8 \strokec8 )\cf4 \strokec4 ;\cb1 \
\cb3   \cf6 \strokec6 digitalWrite\cf8 \strokec8 (\cf4 \strokec4 ledPin, LOW\cf8 \strokec8 )\cf4 \strokec4 ;\cb1 \
\
\cb3   BLEDevice::\cf6 \strokec6 init\cf8 \strokec8 (\cf5 \strokec5 "ESP32_BLE_LED"\cf8 \strokec8 )\cf4 \strokec4 ;\cb1 \
\cb3   BLEServer *pServer = BLEDevice::\cf6 \strokec6 createServer\cf8 \strokec8 ()\cf4 \strokec4 ;\cb1 \
\cb3   BLEService *pService = \cf6 \strokec6 pServer\cf4 \strokec4 ->\cf6 \strokec6 createService\cf8 \strokec8 (\cf4 \strokec4 SERVICE_UUID\cf8 \strokec8 )\cf4 \strokec4 ;\cb1 \
\
\cb3   BLECharacteristic *pCharacteristic = \cf6 \strokec6 pService\cf4 \strokec4 ->\cf6 \strokec6 createCharacteristic\cf8 \strokec8 (\cf4 \cb1 \strokec4 \
\cb3     CHARACTERISTIC_UUID,\cb1 \
\cb3     BLECharacteristic::PROPERTY_WRITE\cb1 \
\cb3   \cf8 \strokec8 )\cf4 \strokec4 ;\cb1 \
\cb3   \cf6 \strokec6 pCharacteristic\cf4 \strokec4 ->\cf6 \strokec6 setCallbacks\cf8 \strokec8 (\cf4 \strokec4 new \cf6 \strokec6 MyCallbacks\cf8 \strokec8 ())\cf4 \strokec4 ;\cb1 \
\
\cb3   \cf6 \strokec6 pService\cf4 \strokec4 ->\cf6 \strokec6 start\cf8 \strokec8 ()\cf4 \strokec4 ;\cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf9 \cb3 \strokec9   // Important: Add the service UUID to the advertising data\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3   BLEAdvertising *pAdvertising = BLEDevice::\cf6 \strokec6 getAdvertising\cf8 \strokec8 ()\cf4 \strokec4 ;\cb1 \
\cb3   \cf6 \strokec6 pAdvertising\cf4 \strokec4 ->\cf6 \strokec6 addServiceUUID\cf8 \strokec8 (\cf4 \strokec4 SERVICE_UUID\cf8 \strokec8 )\cf4 \strokec4 ;\cf9 \strokec9   // ensures the service is visible in advertisement\cf4 \cb1 \strokec4 \
\cb3   \cf6 \strokec6 pAdvertising\cf4 \strokec4 ->\cf6 \strokec6 setScanResponse\cf8 \strokec8 (\cf5 \strokec5 true\cf8 \strokec8 )\cf4 \strokec4 ;\cf9 \strokec9            // optional: include scan response data\cf4 \cb1 \strokec4 \
\cb3   \cf6 \strokec6 pAdvertising\cf4 \strokec4 ->\cf6 \strokec6 start\cf8 \strokec8 ()\cf4 \strokec4 ;\cb1 \
\
\cb3   \cf6 \strokec6 Serial\cf4 \strokec4 .\cf6 \strokec6 println\cf8 \strokec8 (\cf5 \strokec5 "BLE Advertising started. Waiting for client..."\cf8 \strokec8 )\cf4 \strokec4 ;\cb1 \
\pard\pardeftab720\partightenfactor0
\cf8 \cb3 \strokec8 \}\cf4 \cb1 \strokec4 \
\
\pard\pardeftab720\partightenfactor0
\cf7 \cb3 \strokec7 void\cf4 \strokec4  \cf6 \strokec6 loop\cf8 \strokec8 ()\cf4 \strokec4  \cf8 \strokec8 \{\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf9 \cb3 \strokec9   // Nothing needed here\'97BLE callbacks handle the work.\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf8 \cb3 \strokec8 \}\cf4 \cb1 \strokec4 \
\
}